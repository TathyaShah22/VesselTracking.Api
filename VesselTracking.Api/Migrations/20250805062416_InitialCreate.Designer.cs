// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VesselTracking.Api.Data;

#nullable disable

namespace VesselTracking.Api.Migrations
{
    [DbContext(typeof(VesselTrackingDbContext))]
    [Migration("20250805062416_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VesselTracking.Api.Data.Port", b =>
                {
                    b.Property<int>("DockingPortId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DockingPortId"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("capacityDeadweight")
                        .HasColumnType("int");

                    b.HasKey("DockingPortId");

                    b.ToTable("Ports");

                    b.HasData(
                        new
                        {
                            DockingPortId = 1,
                            Country = "UAE",
                            IsAvailable = true,
                            Name = "Main Harbor",
                            capacityDeadweight = 100000
                        },
                        new
                        {
                            DockingPortId = 2,
                            Country = "UAE",
                            IsAvailable = false,
                            Name = "Secondary Port",
                            capacityDeadweight = 50000
                        });
                });

            modelBuilder.Entity("VesselTracking.Api.Data.Vessel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuiltYear")
                        .HasColumnType("int");

                    b.Property<int>("DeadWeight")
                        .HasColumnType("int");

                    b.Property<int>("DockingPortId")
                        .HasColumnType("int");

                    b.Property<string>("ImoNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginCountry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DockingPortId");

                    b.ToTable("Vessels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuiltYear = 2015,
                            DeadWeight = 74000,
                            DockingPortId = 1,
                            ImoNumber = "IMO7654321",
                            Name = "Marine Explorer",
                            OriginCountry = "India",
                            Type = "LNG"
                        },
                        new
                        {
                            Id = 2,
                            BuiltYear = 2010,
                            DeadWeight = 60000,
                            DockingPortId = 2,
                            ImoNumber = "IMO1234567",
                            Name = "Ocean Voyager",
                            OriginCountry = "USA",
                            Type = "Cargo"
                        });
                });

            modelBuilder.Entity("VesselTracking.Api.Data.Vessel", b =>
                {
                    b.HasOne("VesselTracking.Api.Data.Port", "DockingPort")
                        .WithMany("Vessels")
                        .HasForeignKey("DockingPortId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DockingPort");
                });

            modelBuilder.Entity("VesselTracking.Api.Data.Port", b =>
                {
                    b.Navigation("Vessels");
                });
#pragma warning restore 612, 618
        }
    }
}
