// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VesselTracking.Api.Data;

#nullable disable

namespace VesselTracking.Api.Migrations
{
    [DbContext(typeof(VesselTrackingDbContext))]
    partial class VesselTrackingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VesselTracking.Api.Data.DockingPort", b =>
                {
                    b.Property<int>("DockingPortId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DockingPortId"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("capacityDeadweight")
                        .HasColumnType("int");

                    b.HasKey("DockingPortId");

                    b.ToTable("Ports");
                });

            modelBuilder.Entity("VesselTracking.Api.Data.Vessel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuiltYear")
                        .HasColumnType("int");

                    b.Property<int>("DeadWeight")
                        .HasColumnType("int");

                    b.Property<int?>("Docking_portDockingPortId")
                        .HasColumnType("int");

                    b.Property<string>("ImoNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginCountry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Docking_portDockingPortId");

                    b.ToTable("Vessels");
                });

            modelBuilder.Entity("VesselTracking.Api.Data.Vessel", b =>
                {
                    b.HasOne("VesselTracking.Api.Data.DockingPort", "Docking_port")
                        .WithMany("Vessels")
                        .HasForeignKey("Docking_portDockingPortId");

                    b.Navigation("Docking_port");
                });

            modelBuilder.Entity("VesselTracking.Api.Data.DockingPort", b =>
                {
                    b.Navigation("Vessels");
                });
#pragma warning restore 612, 618
        }
    }
}
